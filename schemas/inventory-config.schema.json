{
  "$schema": "https://json-schema.org/draft/2019-09/schema",
  "$id": "inventory-config.schema.json",
  "title": "Config",
  "type": "object",
  "properties": {
    "gitguardian": {
      "$ref": "#/definitions/GitGuardianConfig",
      "nullable": true
    },
    "sources": {
      "type": "object",
      "additionalProperties": {
        "$ref": "#/definitions/FetcherConfig"
      },
      "nullable": true
    }
  },
  "definitions": {
    "Accessibility": {
      "type": "string",
      "enum": [
        "regular",
        "personal"
      ]
    },
    "AuthMode": {
      "oneOf": [
        {
          "title": "Token",
          "description": "Pass a token string to authenticate",
          "type": "object",
          "required": [
            "auth_mode",
            "token"
          ],
          "properties": {
            "auth_mode": {
              "type": "string",
              "enum": [
                "token"
              ]
            },
            "token": {
              "type": "string"
            }
          }
        },
        {
          "title": "Token file path",
          "description": "Pass a file containing a token string to authenticate",
          "type": "object",
          "required": [
            "auth_mode",
            "token_file"
          ],
          "properties": {
            "auth_mode": {
              "type": "string",
              "enum": [
                "token_file"
              ]
            },
            "token_file": {
              "type": "string"
            }
          }
        },
        {
          "title": "Kubernetes authentication",
          "description": "Use k8s authentication. If ggscout is running outside a K8s cluster, it uses the kubeconfig file, otherwise it uses an in-cluster K8s client",
          "type": "object",
          "required": [
            "auth_mode",
            "role"
          ],
          "properties": {
            "auth_mode": {
              "type": "string",
              "enum": [
                "k8s"
              ]
            },
            "mount": {
              "description": "HashiCorp login mount point. By default, \"kubernetes\"",
              "default": "kubernetes",
              "type": "string"
            },
            "namespace": {
              "description": "Kubernetes namespace where service account is defined",
              "type": "string",
              "nullable": true
            },
            "role": {
              "description": "HashiCorp Role to be used for authentication",
              "type": "string"
            },
            "service_account": {
              "description": "Kubernetes service account used for authentication",
              "type": "string",
              "nullable": true
            },
            "token_expiration_seconds": {
              "description": "Token expiration time in second. Default to 30 minutes",
              "default": 1800,
              "type": "integer",
              "format": "int64"
            }
          }
        }
      ]
    },
    "Env": {
      "description": "Declare an environment",
      "oneOf": [
        {
          "title": "production",
          "description": "aliases accepted: `prod` and `prd`",
          "type": "string",
          "enum": [
            "production"
          ]
        },
        {
          "title": "pre-production",
          "description": "aliases accepted: `pre-prod`, `preprod` and `preproduction`",
          "type": "string",
          "enum": [
            "pre-production"
          ]
        },
        {
          "title": "staging",
          "type": "string",
          "enum": [
            "staging"
          ]
        },
        {
          "title": "testing",
          "type": "string",
          "enum": [
            "testing"
          ]
        },
        {
          "title": "development",
          "description": "aliases accepted: `dev` and `local`",
          "type": "string",
          "enum": [
            "development"
          ]
        }
      ]
    },
    "FetcherConfig": {
      "oneOf": [
        {
          "title": "HashiCorp Vault",
          "description": "This fetcher fetches secrets from [HashiCorp Vault](https://www.hashicorp.com/products/vault)",
          "type": "object",
          "required": [
            "fetch_all_versions",
            "type",
            "vault_address"
          ],
          "properties": {
            "auth": {
              "description": "Authentication method. If no authentication method is provided `VAULT_TOKEN` env variable is used as a default token",
              "default": {
                "auth_mode": "token",
                "token": "token from VAULT_TOKEN env"
              },
              "$ref": "#/definitions/AuthMode"
            },
            "auth_token": {
              "description": "[Deprecated - Use `auth.auth_method = \"token\"` and `auth.token = \"my_token\"` instead]",
              "deprecated": true,
              "type": "string",
              "nullable": true
            },
            "env": {
              "$ref": "#/definitions/Env",
              "nullable": true
            },
            "exclude": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/FilteringRule"
              },
              "nullable": true
            },
            "fetch_all_versions": {
              "title": "Whether or not to collect all secret versions",
              "type": "boolean"
            },
            "include": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/FilteringRule"
              },
              "nullable": true
            },
            "mode": {
              "default": "read",
              "$ref": "#/definitions/Mode"
            },
            "path": {
              "type": "string",
              "nullable": true
            },
            "type": {
              "type": "string",
              "enum": [
                "hashicorpvault"
              ]
            },
            "vault_address": {
              "type": "string",
              "format": "uri"
            }
          }
        },
        {
          "title": "Kubernetes",
          "description": "Kubernetes fetcher",
          "type": "object",
          "oneOf": [
            {
              "title": "KubeConfig File",
              "type": "object",
              "required": [
                "config_source"
              ],
              "properties": {
                "config_source": {
                  "type": "string",
                  "enum": [
                    "kubeconfigfile"
                  ]
                },
                "contexts": {
                  "description": "Kubernetes contexts to filter on.",
                  "type": "array",
                  "items": {
                    "type": "string"
                  },
                  "nullable": true
                },
                "kubeconfig_path": {
                  "description": "Path to the kubernetes kubeconfig to use",
                  "type": "string",
                  "nullable": true
                }
              }
            },
            {
              "title": "InCluster",
              "type": "object",
              "required": [
                "config_source",
                "name"
              ],
              "properties": {
                "config_source": {
                  "type": "string",
                  "enum": [
                    "incluster"
                  ]
                },
                "name": {
                  "description": "Kubernetes cluster name is mandatory because it cannot be retrieved with the Kubernetes API",
                  "type": "string"
                }
              }
            }
          ],
          "required": [
            "type"
          ],
          "properties": {
            "env": {
              "$ref": "#/definitions/Env",
              "nullable": true
            },
            "exclude": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/FilteringRule"
              },
              "nullable": true
            },
            "include": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/FilteringRule"
              },
              "nullable": true
            },
            "namespaces": {
              "description": "Namespaces to read from. Can be a literal string or a glob expression to match multiple namespaces.",
              "type": "array",
              "items": {
                "type": "string"
              },
              "nullable": true
            },
            "type": {
              "type": "string",
              "enum": [
                "k8s"
              ]
            }
          }
        },
        {
          "title": "AWS Secrets Manager",
          "description": "AWS Secrets Manager fetcher",
          "type": "object",
          "required": [
            "fetch_all_versions",
            "type"
          ],
          "properties": {
            "env": {
              "$ref": "#/definitions/Env",
              "nullable": true
            },
            "exclude": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/FilteringRule"
              },
              "nullable": true
            },
            "fetch_all_versions": {
              "title": "Whether or not to collect all secret versions",
              "type": "boolean"
            },
            "include": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/FilteringRule"
              },
              "nullable": true
            },
            "mode": {
              "default": "read",
              "$ref": "#/definitions/Mode"
            },
            "profile_name": {
              "type": "string",
              "nullable": true
            },
            "regions": {
              "type": "array",
              "items": {
                "type": "string"
              },
              "nullable": true
            },
            "type": {
              "type": "string",
              "enum": [
                "awssecretsmanager"
              ]
            }
          }
        },
        {
          "title": "GCP Secret Manager",
          "description": "GCP Secret Manager fetcher",
          "type": "object",
          "required": [
            "fetch_all_versions",
            "service_account_key_file",
            "type"
          ],
          "properties": {
            "env": {
              "$ref": "#/definitions/Env",
              "nullable": true
            },
            "exclude": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/FilteringRule"
              },
              "nullable": true
            },
            "fetch_all_versions": {
              "title": "Whether or not to collect all secret versions",
              "type": "boolean"
            },
            "include": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/FilteringRule"
              },
              "nullable": true
            },
            "mode": {
              "default": "read",
              "$ref": "#/definitions/Mode"
            },
            "projects": {
              "type": "array",
              "items": {
                "type": "string"
              },
              "nullable": true
            },
            "service_account_key_file": {
              "type": "string"
            },
            "type": {
              "type": "string",
              "enum": [
                "gcpsecretmanager"
              ]
            }
          }
        },
        {
          "title": "Azure Key Vault",
          "description": "Azure Key Vault fetcher",
          "type": "object",
          "required": [
            "fetch_all_versions",
            "subscription_id",
            "type"
          ],
          "properties": {
            "env": {
              "$ref": "#/definitions/Env",
              "nullable": true
            },
            "exclude": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/FilteringRule"
              },
              "nullable": true
            },
            "fetch_all_versions": {
              "title": "Whether or not to collect all secret versions",
              "type": "boolean"
            },
            "include": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/FilteringRule"
              },
              "nullable": true
            },
            "mode": {
              "default": "read",
              "$ref": "#/definitions/Mode"
            },
            "subscription_id": {
              "type": "string"
            },
            "type": {
              "type": "string",
              "enum": [
                "azurekeyvault"
              ]
            }
          }
        },
        {
          "title": "GitLab CI",
          "description": "GitLab CI fetcher",
          "type": "object",
          "required": [
            "token",
            "type",
            "url"
          ],
          "properties": {
            "env": {
              "$ref": "#/definitions/Env",
              "nullable": true
            },
            "exclude": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/FilteringRule"
              },
              "nullable": true
            },
            "include": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/FilteringRule"
              },
              "nullable": true
            },
            "token": {
              "type": "string"
            },
            "type": {
              "type": "string",
              "enum": [
                "gitlabci"
              ]
            },
            "url": {
              "type": "string",
              "format": "uri"
            }
          }
        },
        {
          "title": "Conjur Cloud",
          "description": "Conjur Cloud fetcher",
          "type": "object",
          "oneOf": [
            {
              "title": "CyberArk authentication",
              "type": "object",
              "required": [
                "auth_mode",
                "client_id",
                "client_secret",
                "tenant_id"
              ],
              "properties": {
                "auth_mode": {
                  "type": "string",
                  "enum": [
                    "cyberark"
                  ]
                },
                "client_id": {
                  "description": "CyberArk client ID or Conjur workload Client ID",
                  "type": "string"
                },
                "client_secret": {
                  "description": "Secret for authenticating",
                  "type": "string"
                },
                "tenant_id": {
                  "description": "Cyberark Cloud tenant ID",
                  "type": "string"
                }
              }
            },
            {
              "title": "Workload authentication",
              "type": "object",
              "required": [
                "api_key",
                "auth_mode",
                "login"
              ],
              "properties": {
                "api_key": {
                  "description": "Workload API key for authenticating",
                  "type": "string"
                },
                "auth_mode": {
                  "type": "string",
                  "enum": [
                    "workload"
                  ]
                },
                "login": {
                  "description": "Workload login (ID) for authenticating",
                  "type": "string"
                }
              }
            }
          ],
          "required": [
            "fetch_all_versions",
            "subdomain",
            "type"
          ],
          "properties": {
            "env": {
              "$ref": "#/definitions/Env",
              "nullable": true
            },
            "exclude": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/FilteringRule"
              },
              "nullable": true
            },
            "fetch_all_versions": {
              "title": "Whether or not to collect all secret versions",
              "type": "boolean"
            },
            "include": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/FilteringRule"
              },
              "nullable": true
            },
            "mode": {
              "default": "read",
              "$ref": "#/definitions/Mode"
            },
            "subdomain": {
              "title": "The Conjur Cloud subdomain",
              "type": "string"
            },
            "type": {
              "type": "string",
              "enum": [
                "conjurcloud"
              ]
            }
          }
        },
        {
          "title": "Akeyless",
          "description": "Akeyless fetcher",
          "type": "object",
          "oneOf": [
            {
              "type": "object",
              "required": [
                "access_id",
                "access_key",
                "auth_mode"
              ],
              "properties": {
                "access_id": {
                  "description": "Akeyless Access ID",
                  "type": "string"
                },
                "access_key": {
                  "description": "Akeyless Access Key",
                  "type": "string"
                },
                "auth_mode": {
                  "type": "string",
                  "enum": [
                    "apikey"
                  ]
                }
              }
            }
          ],
          "required": [
            "fetch_all_versions",
            "type"
          ],
          "properties": {
            "accessibility": {
              "default": "regular",
              "$ref": "#/definitions/Accessibility"
            },
            "api_url": {
              "description": "Akeyless API v2 URL. Default to https://api.akeyless.io/. If you use an Akeyless Gateway, you must use the complete URL. Example: https://my-akeyless-gw.com/api/v2/",
              "default": "https://api.akeyless.io/",
              "type": "string",
              "format": "uri"
            },
            "env": {
              "$ref": "#/definitions/Env",
              "nullable": true
            },
            "exclude": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/FilteringRule"
              },
              "nullable": true
            },
            "fetch_all_versions": {
              "title": "Whether or not to collect all secret versions",
              "type": "boolean"
            },
            "include": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/FilteringRule"
              },
              "nullable": true
            },
            "mode": {
              "default": "read",
              "$ref": "#/definitions/Mode"
            },
            "type": {
              "type": "string",
              "enum": [
                "akeyless"
              ]
            }
          }
        },
        {
          "title": "Delinea Secret Server",
          "description": "Delinea SecretServer fetcher",
          "type": "object",
          "oneOf": [
            {
              "type": "object",
              "required": [
                "auth_mode",
                "client_id",
                "client_secret"
              ],
              "properties": {
                "auth_mode": {
                  "type": "string",
                  "enum": [
                    "oauth"
                  ]
                },
                "client_id": {
                  "type": "string"
                },
                "client_secret": {
                  "type": "string"
                }
              }
            }
          ],
          "required": [
            "tenant",
            "type"
          ],
          "properties": {
            "env": {
              "$ref": "#/definitions/Env",
              "nullable": true
            },
            "exclude": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/FilteringRule"
              },
              "nullable": true
            },
            "include": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/FilteringRule"
              },
              "nullable": true
            },
            "mode": {
              "default": "read",
              "$ref": "#/definitions/Mode"
            },
            "tenant": {
              "description": "Delinea tenant",
              "type": "string"
            },
            "tld": {
              "description": "Top-level domain This can be found by clicking on \"Token API documentation\" in the Settings > REST API section of the Secret Server UI",
              "default": "com",
              "type": "string"
            },
            "type": {
              "type": "string",
              "enum": [
                "delineasecretserver"
              ]
            }
          }
        }
      ]
    },
    "FilteringRule": {
      "type": "object",
      "properties": {
        "resource_ids": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/RuleElement"
          },
          "nullable": true
        },
        "source_ids": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/RuleElement"
          },
          "nullable": true
        }
      }
    },
    "GitGuardianConfig": {
      "title": "GitGuardian configuration",
      "type": "object",
      "required": [
        "api_token",
        "endpoint"
      ],
      "properties": {
        "api_token": {
          "title": "API Token to authenticate with",
          "type": "string"
        },
        "endpoint": {
          "title": "Hostname or endpoint",
          "description": "Example: https://gitguardian.internal/",
          "type": "string",
          "format": "uri"
        }
      }
    },
    "Mode": {
      "description": "The mode gives an additional layer of permissions allowing to configure a Scout instance, giving read-only, write-only, or read and write permissions to that source. Default is read-only.",
      "type": "string",
      "enum": [
        "read",
        "write",
        "read/write"
      ]
    },
    "RuleElement": {
      "oneOf": [
        {
          "type": "object",
          "required": [
            "GreedySuffixRule"
          ],
          "properties": {
            "GreedySuffixRule": {
              "type": "string"
            }
          },
          "additionalProperties": false
        },
        {
          "type": "object",
          "required": [
            "ExactRule"
          ],
          "properties": {
            "ExactRule": {
              "type": "string"
            }
          },
          "additionalProperties": false
        }
      ]
    }
  }
}
