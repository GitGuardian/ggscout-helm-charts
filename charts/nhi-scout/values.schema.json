{
  "$schema": "http://json-schema.org/draft-07/schema#",
  "type": "object",
  "required": [
    "inventory"
  ],
  "minProperties": 1,
  "properties": {
    "inventory": {
      "type": "object",
      "required": [
        "config"
      ],
      "minProperties": 1,
      "properties": {
        "config": {
          "$ref": "#/definitions/inventory-config.schema.json"
        },
        "jobs": {
          "$ref": "#/definitions/jobs.schema.json"
        },
        "log_level": {
          "$ref": "#/definitions/inventory-log-level.schema.json"
        }
      },
      "additionalProperties": false
    }
  },
  "additionalProperties": {
    "type": [
      "null",
      "boolean",
      "object",
      "array",
      "string",
      "number",
      "integer"
    ]
  },
  "definitions": {
    "inventory-config.schema.json": {
      "$schema": "https://json-schema.org/draft/2019-09/schema",
      "title": "Config",
      "type": "object",
      "minProperties": 0,
      "properties": {
        "gitguardian": {
          "$ref": "#/definitions/inventory-config.schema.json/definitions/GitGuardianConfig",
          "nullable": true
        },
        "sources": {
          "type": "object",
          "minProperties": 0,
          "properties": {},
          "additionalProperties": {
            "$ref": "#/definitions/inventory-config.schema.json/definitions/FetcherConfig"
          },
          "nullable": true
        }
      },
      "definitions": {
        "Accessibility": {
          "enum": [
            "regular",
            "personal"
          ]
        },
        "FetcherConfig": {
          "oneOf": [
            {
              "title": "HashiCorp Vault",
              "description": "This fetcher fetches secrets from [HashiCorp Vault](https://www.hashicorp.com/products/vault)",
              "type": "object",
              "required": [
                "fetch_all_versions",
                "type",
                "vault_address"
              ],
              "minProperties": 3,
              "properties": {
                "type": {
                  "enum": [
                    "hashicorpvault"
                  ]
                },
                "auth_token": {
                  "type": "string",
                  "minLength": 0,
                  "nullable": true
                },
                "auth_token_file": {
                  "type": "string",
                  "minLength": 0,
                  "nullable": true
                },
                "exclude": {
                  "type": "array",
                  "minItems": 0,
                  "items": {
                    "$ref": "#/definitions/inventory-config.schema.json/definitions/FilteringRule"
                  },
                  "nullable": true
                },
                "fetch_all_versions": {
                  "title": "Whether or not to collect all secret versions",
                  "enum": [
                    false,
                    true
                  ]
                },
                "include": {
                  "type": "array",
                  "minItems": 0,
                  "items": {
                    "$ref": "#/definitions/inventory-config.schema.json/definitions/FilteringRule"
                  },
                  "nullable": true
                },
                "mode": {
                  "default": "read",
                  "$ref": "#/definitions/inventory-config.schema.json/definitions/Mode"
                },
                "path": {
                  "type": "string",
                  "minLength": 0,
                  "nullable": true
                },
                "vault_address": {
                  "type": "string",
                  "format": "uri",
                  "minLength": 0
                }
              }
            },
            {
              "title": "Kubernetes",
              "description": "Kubernetes fetcher",
              "type": "object",
              "oneOf": [
                {
                  "type": "object",
                  "required": [
                    "config_source"
                  ],
                  "minProperties": 1,
                  "properties": {
                    "config_source": {
                      "enum": [
                        "kubeconfigfile"
                      ]
                    },
                    "contexts": {
                      "description": "Kubernetes contexts to filter on.",
                      "type": "array",
                      "minItems": 0,
                      "items": {
                        "type": "string",
                        "minLength": 0
                      },
                      "nullable": true
                    },
                    "kubeconfig_path": {
                      "description": "Path to the kubernetes kubeconfig to use",
                      "type": "string",
                      "minLength": 0,
                      "nullable": true
                    }
                  }
                },
                {
                  "type": "object",
                  "required": [
                    "config_source",
                    "name"
                  ],
                  "minProperties": 2,
                  "properties": {
                    "config_source": {
                      "enum": [
                        "incluster"
                      ]
                    },
                    "name": {
                      "description": "Kubernetes cluster namecause it cannot be retrieved with the Kubernetes API",
                      "type": "string",
                      "minLength": 0
                    }
                  }
                }
              ],
              "required": [
                "type"
              ],
              "minProperties": 1,
              "properties": {
                "type": {
                  "enum": [
                    "k8s"
                  ]
                },
                "exclude": {
                  "type": "array",
                  "minItems": 0,
                  "items": {
                    "$ref": "#/definitions/inventory-config.schema.json/definitions/FilteringRule"
                  },
                  "nullable": true
                },
                "include": {
                  "type": "array",
                  "minItems": 0,
                  "items": {
                    "$ref": "#/definitions/inventory-config.schema.json/definitions/FilteringRule"
                  },
                  "nullable": true
                },
                "namespaces": {
                  "description": "Namespaces to read from. Can be a literal string or a glob expression to match multiple namespaces.",
                  "type": "array",
                  "minItems": 0,
                  "items": {
                    "type": "string",
                    "minLength": 0
                  },
                  "nullable": true
                }
              }
            },
            {
              "title": "AWS Secrets Manager",
              "description": "AWS Secrets Manager fetcher",
              "type": "object",
              "required": [
                "fetch_all_versions",
                "type"
              ],
              "minProperties": 2,
              "properties": {
                "type": {
                  "enum": [
                    "awssecretsmanager"
                  ]
                },
                "exclude": {
                  "type": "array",
                  "minItems": 0,
                  "items": {
                    "$ref": "#/definitions/inventory-config.schema.json/definitions/FilteringRule"
                  },
                  "nullable": true
                },
                "fetch_all_versions": {
                  "title": "Whether or not to collect all secret versions",
                  "enum": [
                    false,
                    true
                  ]
                },
                "include": {
                  "type": "array",
                  "minItems": 0,
                  "items": {
                    "$ref": "#/definitions/inventory-config.schema.json/definitions/FilteringRule"
                  },
                  "nullable": true
                },
                "mode": {
                  "default": "read",
                  "$ref": "#/definitions/inventory-config.schema.json/definitions/Mode"
                },
                "profile_name": {
                  "type": "string",
                  "minLength": 0,
                  "nullable": true
                },
                "regions": {
                  "type": "array",
                  "minItems": 0,
                  "items": {
                    "type": "string",
                    "minLength": 0
                  },
                  "nullable": true
                }
              }
            },
            {
              "title": "GCP Secret Manager",
              "description": "GCP Secret Manager fetcher",
              "type": "object",
              "required": [
                "fetch_all_versions",
                "service_account_key_file",
                "type"
              ],
              "minProperties": 3,
              "properties": {
                "type": {
                  "enum": [
                    "gcpsecretmanager"
                  ]
                },
                "exclude": {
                  "type": "array",
                  "minItems": 0,
                  "items": {
                    "$ref": "#/definitions/inventory-config.schema.json/definitions/FilteringRule"
                  },
                  "nullable": true
                },
                "fetch_all_versions": {
                  "title": "Whether or not to collect all secret versions",
                  "enum": [
                    false,
                    true
                  ]
                },
                "include": {
                  "type": "array",
                  "minItems": 0,
                  "items": {
                    "$ref": "#/definitions/inventory-config.schema.json/definitions/FilteringRule"
                  },
                  "nullable": true
                },
                "mode": {
                  "default": "read",
                  "$ref": "#/definitions/inventory-config.schema.json/definitions/Mode"
                },
                "projects": {
                  "type": "array",
                  "minItems": 0,
                  "items": {
                    "type": "string",
                    "minLength": 0
                  },
                  "nullable": true
                },
                "service_account_key_file": {
                  "type": "string",
                  "minLength": 0
                }
              }
            },
            {
              "title": "Azure Key Vault",
              "description": "Azure Key Vault fetcher",
              "type": "object",
              "required": [
                "fetch_all_versions",
                "subscription_id",
                "type"
              ],
              "minProperties": 3,
              "properties": {
                "type": {
                  "enum": [
                    "azurekeyvault"
                  ]
                },
                "exclude": {
                  "type": "array",
                  "minItems": 0,
                  "items": {
                    "$ref": "#/definitions/inventory-config.schema.json/definitions/FilteringRule"
                  },
                  "nullable": true
                },
                "fetch_all_versions": {
                  "title": "Whether or not to collect all secret versions",
                  "enum": [
                    false,
                    true
                  ]
                },
                "include": {
                  "type": "array",
                  "minItems": 0,
                  "items": {
                    "$ref": "#/definitions/inventory-config.schema.json/definitions/FilteringRule"
                  },
                  "nullable": true
                },
                "mode": {
                  "default": "read",
                  "$ref": "#/definitions/inventory-config.schema.json/definitions/Mode"
                },
                "subscription_id": {
                  "type": "string",
                  "minLength": 0
                }
              }
            },
            {
              "title": "GitLab CI",
              "description": "GitLab CI fetcher",
              "type": "object",
              "required": [
                "token",
                "type",
                "url"
              ],
              "minProperties": 3,
              "properties": {
                "type": {
                  "enum": [
                    "gitlabci"
                  ]
                },
                "exclude": {
                  "type": "array",
                  "minItems": 0,
                  "items": {
                    "$ref": "#/definitions/inventory-config.schema.json/definitions/FilteringRule"
                  },
                  "nullable": true
                },
                "include": {
                  "type": "array",
                  "minItems": 0,
                  "items": {
                    "$ref": "#/definitions/inventory-config.schema.json/definitions/FilteringRule"
                  },
                  "nullable": true
                },
                "token": {
                  "type": "string",
                  "minLength": 0
                },
                "url": {
                  "type": "string",
                  "format": "uri",
                  "minLength": 0
                }
              }
            },
            {
              "title": "Conjur Cloud",
              "description": "Conjur Cloud fetcher",
              "type": "object",
              "oneOf": [
                {
                  "title": "CyberArk authentication",
                  "type": "object",
                  "required": [
                    "auth_mode",
                    "client_id",
                    "client_secret",
                    "tenant_id"
                  ],
                  "minProperties": 4,
                  "properties": {
                    "auth_mode": {
                      "enum": [
                        "cyberark"
                      ]
                    },
                    "client_id": {
                      "description": "CyberArk client ID or Conjur workload Client ID",
                      "type": "string",
                      "minLength": 0
                    },
                    "client_secret": {
                      "description": "Secret for authenticating",
                      "type": "string",
                      "minLength": 0
                    },
                    "tenant_id": {
                      "description": "Cyberark Cloud tenant ID",
                      "type": "string",
                      "minLength": 0
                    }
                  }
                },
                {
                  "title": "Workload authentication",
                  "type": "object",
                  "required": [
                    "api_key",
                    "auth_mode",
                    "login"
                  ],
                  "minProperties": 3,
                  "properties": {
                    "api_key": {
                      "description": "Workload API key for authenticating",
                      "type": "string",
                      "minLength": 0
                    },
                    "auth_mode": {
                      "enum": [
                        "workload"
                      ]
                    },
                    "login": {
                      "description": "Workload login (ID) for authenticating",
                      "type": "string",
                      "minLength": 0
                    }
                  }
                }
              ],
              "required": [
                "fetch_all_versions",
                "subdomain",
                "type"
              ],
              "minProperties": 3,
              "properties": {
                "type": {
                  "enum": [
                    "conjurcloud"
                  ]
                },
                "exclude": {
                  "type": "array",
                  "minItems": 0,
                  "items": {
                    "$ref": "#/definitions/inventory-config.schema.json/definitions/FilteringRule"
                  },
                  "nullable": true
                },
                "fetch_all_versions": {
                  "title": "Whether or not to collect all secret versions",
                  "enum": [
                    false,
                    true
                  ]
                },
                "include": {
                  "type": "array",
                  "minItems": 0,
                  "items": {
                    "$ref": "#/definitions/inventory-config.schema.json/definitions/FilteringRule"
                  },
                  "nullable": true
                },
                "mode": {
                  "default": "read",
                  "$ref": "#/definitions/inventory-config.schema.json/definitions/Mode"
                },
                "subdomain": {
                  "title": "The Conjur Cloud subdomain",
                  "type": "string",
                  "minLength": 0
                }
              }
            },
            {
              "title": "Akeyless",
              "description": "Akeyless fetcher",
              "type": "object",
              "oneOf": [
                {
                  "type": "object",
                  "required": [
                    "access_id",
                    "access_key",
                    "auth_mode"
                  ],
                  "minProperties": 3,
                  "properties": {
                    "access_id": {
                      "description": "Akeyless Access ID",
                      "type": "string",
                      "minLength": 0
                    },
                    "access_key": {
                      "description": "Akeyless Access Key",
                      "type": "string",
                      "minLength": 0
                    },
                    "auth_mode": {
                      "enum": [
                        "apikey"
                      ]
                    }
                  }
                }
              ],
              "required": [
                "fetch_all_versions",
                "type"
              ],
              "minProperties": 2,
              "properties": {
                "type": {
                  "enum": [
                    "akeyless"
                  ]
                },
                "accessibility": {
                  "default": "regular",
                  "$ref": "#/definitions/inventory-config.schema.json/definitions/Accessibility"
                },
                "exclude": {
                  "type": "array",
                  "minItems": 0,
                  "items": {
                    "$ref": "#/definitions/inventory-config.schema.json/definitions/FilteringRule"
                  },
                  "nullable": true
                },
                "fetch_all_versions": {
                  "title": "Whether or not to collect all secret versions",
                  "enum": [
                    false,
                    true
                  ]
                },
                "include": {
                  "type": "array",
                  "minItems": 0,
                  "items": {
                    "$ref": "#/definitions/inventory-config.schema.json/definitions/FilteringRule"
                  },
                  "nullable": true
                },
                "mode": {
                  "default": "read",
                  "$ref": "#/definitions/inventory-config.schema.json/definitions/Mode"
                }
              }
            },
            {
              "title": "Delinea Secret Server",
              "description": "Delinea SecretServer fetcher",
              "type": "object",
              "oneOf": [
                {
                  "type": "object",
                  "required": [
                    "auth_mode",
                    "client_id",
                    "client_secret"
                  ],
                  "minProperties": 3,
                  "properties": {
                    "auth_mode": {
                      "enum": [
                        "oauth"
                      ]
                    },
                    "client_id": {
                      "type": "string",
                      "minLength": 0
                    },
                    "client_secret": {
                      "type": "string",
                      "minLength": 0
                    }
                  }
                }
              ],
              "required": [
                "tenant",
                "type"
              ],
              "minProperties": 2,
              "properties": {
                "type": {
                  "enum": [
                    "delineasecretserver"
                  ]
                },
                "exclude": {
                  "type": "array",
                  "minItems": 0,
                  "items": {
                    "$ref": "#/definitions/inventory-config.schema.json/definitions/FilteringRule"
                  },
                  "nullable": true
                },
                "include": {
                  "type": "array",
                  "minItems": 0,
                  "items": {
                    "$ref": "#/definitions/inventory-config.schema.json/definitions/FilteringRule"
                  },
                  "nullable": true
                },
                "mode": {
                  "default": "read",
                  "$ref": "#/definitions/inventory-config.schema.json/definitions/Mode"
                },
                "tenant": {
                  "description": "Delinea tenant",
                  "type": "string",
                  "minLength": 0
                },
                "tld": {
                  "description": "Top-level domain This can be found by clicking on \"Token API documentation\" in the Settings > REST API section of the Secret Server UI",
                  "default": "com",
                  "type": "string",
                  "minLength": 0
                }
              }
            }
          ]
        },
        "FilteringRule": {
          "type": "object",
          "minProperties": 0,
          "properties": {
            "resource_ids": {
              "type": "array",
              "minItems": 0,
              "items": {
                "$ref": "#/definitions/inventory-config.schema.json/definitions/RuleElement"
              },
              "nullable": true
            },
            "source_ids": {
              "type": "array",
              "minItems": 0,
              "items": {
                "$ref": "#/definitions/inventory-config.schema.json/definitions/RuleElement"
              },
              "nullable": true
            }
          }
        },
        "GitGuardianConfig": {
          "title": "GitGuardian configuration",
          "type": "object",
          "required": [
            "api_token",
            "endpoint"
          ],
          "minProperties": 2,
          "properties": {
            "api_token": {
              "title": "API Token to authenticate with",
              "type": "string",
              "minLength": 0
            },
            "endpoint": {
              "title": "Hostname or endpoint",
              "description": "Example: https://gitguardian.internal/",
              "type": "string",
              "minLength": 0
            }
          }
        },
        "Mode": {
          "description": "The mode gives an additional layer of permissions allowing to configure a Scout instance, giving read-only, write-only, or read and write permissions to that source. Default is read-only.",
          "enum": [
            "read",
            "write",
            "read/write"
          ]
        },
        "RuleElement": {
          "oneOf": [
            {
              "type": "object",
              "required": [
                "GreedySuffixRule"
              ],
              "minProperties": 1,
              "properties": {
                "GreedySuffixRule": {
                  "type": "string",
                  "minLength": 0
                }
              },
              "additionalProperties": false
            },
            {
              "type": "object",
              "required": [
                "ExactRule"
              ],
              "minProperties": 1,
              "properties": {
                "ExactRule": {
                  "type": "string",
                  "minLength": 0
                }
              },
              "additionalProperties": false
            }
          ]
        }
      }
    },
    "inventory-log-level.schema.json": {
      "$schema": "http://json-schema.org/draft-07/schema#",
      "title": "LogLevel",
      "enum": [
        "trace",
        "debug",
        "info",
        "warn",
        "error"
      ]
    },
    "jobs.schema.json": {
      "$schema": "http://json-schema.org/draft-07/schema#",
      "type": "object",
      "minProperties": 0,
      "properties": {
        "fetch": {
          "description": "Job that fetches data from defined sources. If send is set to `true`, send collected data to the configured GitGuardian instance.",
          "type": "object",
          "minProperties": 0,
          "properties": {
            "enabled": {
              "default": true,
              "enum": [
                false,
                true
              ]
            },
            "schedule": {
              "default": "*/15 * * * *",
              "type": "string",
              "minLength": 0
            },
            "send": {
              "default": true,
              "enum": [
                false,
                true
              ]
            }
          }
        },
        "ping": {
          "type": "object",
          "minProperties": 0,
          "properties": {
            "schedule": {
              "default": "* * * * *",
              "type": "string",
              "minLength": 0
            }
          }
        },
        "sync": {
          "type": "object",
          "minProperties": 0,
          "properties": {
            "enabled": {
              "default": false,
              "enum": [
                false,
                true
              ]
            },
            "schedule": {
              "default": "* * * * *",
              "type": "string",
              "minLength": 0
            }
          }
        }
      }
    }
  }
}
